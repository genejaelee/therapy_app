$(".chats").ready(function(){
	
	disableTwilioButtons('.twilio-button');
	getSizesAndResize();
	
	$(window).resize(function() {
		getSizesAndResize();
	})
	
	// NICKNAME STUFF
	var old_nickname = "";
	$('#nickname').keydown(function(e) {
		if (e.keyCode == 13) {
			$('.confirm-button').click();
		}
	});
	
	// Audio stuff init
	var audio = document.createElement("audio");
	var audio_types = ["ogg", "mpeg", "wav"];
	// Loop through the types I have and break out when the browser says it might be able to play one
	if (typeof audio.canPlayType == 'function') {
  	for(type in audio_types) {
  		var type_name = audio_types[type];
  		if(audio.canPlayType("audio/" + type_name) == "yes" || audio.canPlayType("audio/" + type_name) == "maybe") {
  			browser_audio_type = type_name;
  			break;
  		}
  	}
	}
	
	//hide footer
	$('#footer').css('display', 'none');
	
});

/////////////// CHATROOM SPECIFIC ///////////////

$(".chats.view").ready(function() {
	
	/*
	$('.timer-start-button').click(function(){
		var time = $('.timer div').data("time");
		var state = "notstarted"
		$.ajax({
			url: '/api/start_timer',
			type: 'POST',
			data: { "chat_id": chat_id, "time": time },
			success: function(data) {
			}
		});
	});
	
	$('.timer-toggle-button').click(function(){
		var time = $('.timer div').data("time");
		timer = $('.timer');
		var state = getTimerState(timer);
		$.ajax({
			url: '/api/toggle_timer',
			type: 'POST',
			data: { "chat_id": chat_id, "time": time, "state": state },
			success: function(data) {
			}
		});
	});
	
	$('.timer-reset-button').click(function(){
		$.ajax({
			url: '/api/reset_timer',
			type: 'POST',
			data: { "chat_id": chat_id },
			success: function(data) {
			}
		});
	})
	*/
	
	$('.helplines-button').click(function() {
		helplinesCard = $('#helplines-card')
		if (helplinesCard.hasClass('opened')) {
			closeSidebarCard(helplinesCard);
		}
		else if (helplinesCard.hasClass('closed')) {
			openSidebarCard(helplinesCard);
		}
	});
	
	$('.chat-panel').click(function() {
		if ($('.sidebar-card').hasClass('opened')) {
			closeSidebarCard($('.sidebar-card'));
		}
	});

	/*
	presenceChannel.bind('start_timer', function(member){
		startTimer(member.time);
	});
	
	presenceChannel.bind('toggle_timer', function(member){
		toggleTimer(member.time, member.state);
	});
	
	presenceChannel.bind('get_timer', function(member){
		startTimer(member.time, member.state);
		pauseTimer();
	});
	
	presenceChannel.bind('reset_timer', function(member){
		resetTimer();
	});

	// When somebody updates their nickname, tell all the people including yourself
	presenceChannel.bind('updated_nickname', function(member) {
		scrollToTheBottomUnlessScrolled($('#messages'));
		if(member.user_id == user_id) {
			$('.messages-container').append('<div class="note">You have updated your nickname to <strong>' + member.nickname + '</strong>.</div>');
		}
		else {
			$('.messages-container').append('<div class="note"><strong>' + member.old_nickname + '</strong> updated their nickname to <strong>' + member.nickname + '</strong>.</div>');
		}
	});
	
	*/
	
	// Now pusher is all setup lets let the user go wild!
	$('#loading').fadeOut();
	$('#message').removeAttr("disabled");

	getServerTimer();
});

//////////////////////////////////////////////////
////////////////// Define Vars; //////////////////
//////////////////////////////////////////////////

var is_typing_currently = false;
var browser_audio_type = "";